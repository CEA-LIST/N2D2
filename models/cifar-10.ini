;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;    (C) Copyright 2019 CEA LIST. All Rights Reserved.
;    Contributor(s): Olivier BICHLER (olivier.bichler@cea.fr)
;
;    This software is governed by the CeCILL-C license under French law and
;    abiding by the rules of distribution of free software.  You can  use,
;    modify and/ or redistribute the software under the terms of the CeCILL-C
;    license as circulated by CEA, CNRS and INRIA at the following URL
;    "http://www.cecill.info".
;
;    As a counterpart to the access to the source code and  rights to copy,
;    modify and redistribute granted by the license, users are provided only
;    with a limited warranty  and the software's author,  the holder of the
;    economic rights,  and the successive licensors  have only  limited
;    liability.
;
;    The fact that you are presently reading this means that you have had
;    knowledge of the CeCILL-C license and that you accept its terms.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Simple CIFAR-10 model (~15% error rate for ~300k parameters)
; Input normalization and BatchNorm can be removed for a ~17% error rate.
; Training time: ~10 min on Titan X

; ./n2d2.sh "$N2D2_MODELS/cifar-10.ini" -learn 5000000 -log 50000
; ./n2d2 "$N2D2_MODELS/cifar-10.ini" -learn-epoch 100 -dev 3

$NB_CLASSES=10
$SIZE_X=32
$SIZE_Y=32
; Margin for random cropping during learning
$MARGIN=4

; Training parameters
$LR=0.01
$WD=0.0001
$MOMENTUM=0.9
$BATCH_SIZE=64
$EPOCHS=100

DefaultModel=Frame_CUDA

; Database
[database]
Type=CIFAR10_Database
Validation=0.1

; Environment
[sp]
SizeX=${SIZE_X}
SizeY=${SIZE_Y}
NbChannels=3
BatchSize=${BATCH_SIZE}

[sp.StimuliData-normalize]
ApplyTo=LearnOnly

[sp.Transformation-normalize]
Type=RangeAffineTransformation
FirstOperator=Minus
FirstValue=[sp.StimuliData-normalize]_GlobalValue.mean
SecondOperator=Divides
SecondValue=[sp.StimuliData-normalize]_GlobalValue.stdDev

;[sp.Transformation-1]
;Type=PadCropTransformation
;Width=$(${SIZE_X} + ${MARGIN})
;Height=$(${SIZE_Y} + ${MARGIN})
;ApplyTo=LearnOnly
;
;; N2D2-IP only
;[sp.OnTheFlyTransformation-1]
;Type=SliceExtractionTransformation
;Width=[sp]SizeX
;Height=[sp]SizeY
;RandomOffsetX=1
;RandomOffsetY=1
;RandomRotation=1
;RandomRotationRange=-15 15
;AllowPadding=1
;ApplyTo=LearnOnly

[sp.OnTheFlyTransformation-2]
Type=FlipTransformation
ApplyTo=LearnOnly
RandomHorizontalFlip=1

[conv_def]
Type=Conv
ActivationFunction=Linear
WeightsFiller=HeFiller
ConfigSection=common.config

[bn_def]
Type=BatchNorm
ActivationFunction=Rectifier

[conv1.1] conv_def
Input=sp
KernelDims=3 3
NbOutputs=32
Padding=1
[bn1.1] bn_def
Input=conv1.1
NbOutputs=[conv1.1]NbOutputs

[conv1.2] conv_def
Input=bn1.1
KernelDims=3 3
NbOutputs=32
Padding=1
[bn1.2] bn_def
Input=conv1.2
NbOutputs=[conv1.2]NbOutputs

[pool1]
Input=bn1.2
Type=Pool
PoolDims=2 2
NbOutputs=[conv1.2]NbOutputs
Stride=2
Pooling=Max
Mapping.Size=1

[drop1]
Input=pool1
Type=Dropout
NbOutputs=[pool1]NbOutputs
Dropout=0.2

[conv2.1] conv_def
Input=drop1
KernelDims=3 3
NbOutputs=64
Padding=1
[bn2.1] bn_def
Input=conv2.1
NbOutputs=[conv2.1]NbOutputs

[conv2.2] conv_def
Input=bn2.1
KernelDims=3 3
NbOutputs=64
Padding=1
[bn2.2] bn_def
Input=conv2.2
NbOutputs=[conv2.2]NbOutputs

[pool2]
Input=bn2.2
Type=Pool
PoolDims=2 2
NbOutputs=[conv2.2]NbOutputs
Stride=2
Pooling=Max
Mapping.Size=1

[drop2]
Input=pool2
Type=Dropout
NbOutputs=[pool2]NbOutputs
Dropout=0.3

[conv3.1] conv_def
Input=drop2
KernelDims=3 3
NbOutputs=128
Padding=1
[bn3.1] bn_def
Input=conv3.1
NbOutputs=[conv3.1]NbOutputs

[conv3.2] conv_def
Input=bn3.1
KernelDims=3 3
NbOutputs=128
Padding=1
[bn3.2] bn_def
Input=conv3.2
NbOutputs=[conv3.2]NbOutputs

[pool3]
Input=bn3.2
Type=Pool
PoolDims=2 2
NbOutputs=[conv3.2]NbOutputs
Stride=2
Pooling=Max
Mapping.Size=1

[drop3]
Input=pool3
Type=Dropout
NbOutputs=[pool3]NbOutputs
Dropout=0.4

[fc1]
Input=drop3
Type=Fc
NbOutputs=${NB_CLASSES}
ActivationFunction=Linear
WeightsFiller=XavierFiller
ConfigSection=common.config

[softmax]
Input=fc1
Type=Softmax
NbOutputs=[fc1]NbOutputs
WithLoss=1

[softmax.Target]

[common.config]
WeightsSolver.LearningRate=${LR}
WeightsSolver.Decay=${WD}
BiasSolver.LearningRate=$(2.0 * ${LR})
BiasSolver.Decay=0.0
Solvers.Momentum=${MOMENTUM}
Solvers.LearningRatePolicy=StepDecay
Solvers.LearningRateStepSize=$([sp]_EpochSize * 40)
Solvers.LearningRateDecay=0.5
