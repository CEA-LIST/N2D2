;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;    (C) Copyright 2017 CEA LIST. All Rights Reserved.
;    Contributor(s): Olivier BICHLER (olivier.bichler@cea.fr)
;
;    This software is governed by the CeCILL-C license under French law and
;    abiding by the rules of distribution of free software.  You can  use,
;    modify and/ or redistribute the software under the terms of the CeCILL-C
;    license as circulated by CEA, CNRS and INRIA at the following URL
;    "http://www.cecill.info".
;
;    As a counterpart to the access to the source code and  rights to copy,
;    modify and redistribute granted by the license, users are provided only
;    with a limited warranty  and the software's author,  the holder of the
;    economic rights,  and the successive licensors  have only  limited
;    liability.
;
;    The fact that you are presently reading this means that you have had
;    knowledge of the CeCILL-C license and that you accept its terms.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Implements SqueezeNet v1.0:
; Forrest N. Iandola et al., "SqueezeNet: AlexNet-level accuracy with 50x fewer
; parameters and <0.5MB model size", arXiv:1602.07360, 2016
; https://github.com/DeepScale/SqueezeNet

; The recognition rate should start increasing after 2-3M images presented.

; ./n2d2.sh "$N2D2_MODELS/SqueezeNet_v1.0.ini" -learn 87040000 -log 512000

; Resolution
$SIZE=227
; Margin for random cropping during learning
$MARGIN=32

; Training parameters
$LR=0.04
$WD=0.0002
$MOMENTUM=0.9
$BATCH_SIZE=32
$ITER_SIZE=16
$EPOCHS=68

DefaultModel=Frame_CUDA

; Database
[database]
Type=ILSVRC2012_Database
RandomPartitioning=0
Learn=1.0

; Environment
[sp]
SizeX=${SIZE}
SizeY=${SIZE}
NbChannels=3
BatchSize=${BATCH_SIZE}

[sp.Transformation-1]
Type=RescaleTransformation
Width=$(${SIZE} + ${MARGIN})
Height=$(${SIZE} + ${MARGIN})
KeepAspectRatio=1
ResizeToFit=0

[sp.Transformation-2]
Type=PadCropTransformation
Width=[sp.Transformation-1]Width
Height=[sp.Transformation-1]Height

[sp.Transformation-3]
Type=ColorSpaceTransformation
ColorSpace=BGR

[sp.Transformation-4]
Type=RangeAffineTransformation
FirstOperator=Minus
FirstValue=104.0 117.0 123.0 ; BGR format, same as in Caffe
SecondOperator=Divides
SecondValue=255.0

[sp.Transformation-6]
Type=SliceExtractionTransformation
ApplyTo=NoLearn
Width=[sp]SizeX
Height=[sp]SizeY
OffsetX=$(${MARGIN} // 2)
OffsetY=$(${MARGIN} // 2)

[sp.OnTheFlyTransformation-5]
Type=SliceExtractionTransformation
ApplyTo=LearnOnly
Width=[sp]SizeX
Height=[sp]SizeY
RandomOffsetX=1
RandomOffsetY=1

[sp.OnTheFlyTransformation-6]
Type=FlipTransformation
ApplyTo=LearnOnly
RandomHorizontalFlip=1

[conv_def]
Type=Conv
ActivationFunction=Rectifier
WeightsFiller=HeFiller
ConfigSection=common.config

[conv1] conv_def
Input=sp
KernelWidth=7
KernelHeight=7
NbOutputs=96
Stride=2

[pool1]
Input=conv1
Type=Pool
PoolDims=3 3
NbOutputs=96
Stride=2
Pooling=Max
Mapping.Size=1

[fire2_s1x1] conv_def
Input=pool1
KernelWidth=1
KernelHeight=1
NbOutputs=16

[fire2_e1x1] conv_def
Input=fire2_s1x1
KernelWidth=1
KernelHeight=1
NbOutputs=64

[fire2_e3x3] conv_def
Input=fire2_s1x1
KernelWidth=3
KernelHeight=3
Padding=1
NbOutputs=64

[fire3_s1x1] conv_def
Input=fire2_e1x1,fire2_e3x3
KernelWidth=1
KernelHeight=1
NbOutputs=16

[fire3_e1x1] conv_def
Input=fire3_s1x1
KernelWidth=1
KernelHeight=1
NbOutputs=64

[fire3_e3x3] conv_def
Input=fire3_s1x1
KernelWidth=3
KernelHeight=3
Padding=1
NbOutputs=64

[fire4_s1x1] conv_def
Input=fire3_e1x1,fire3_e3x3
KernelWidth=1
KernelHeight=1
NbOutputs=32

[fire4_e1x1] conv_def
Input=fire4_s1x1
KernelWidth=1
KernelHeight=1
NbOutputs=128

[fire4_e3x3] conv_def
Input=fire4_s1x1
KernelWidth=3
KernelHeight=3
Padding=1
NbOutputs=128

[pool4]
Input=fire4_e1x1,fire4_e3x3
Type=Pool
PoolDims=3 3
NbOutputs=256
Stride=2
Pooling=Max
Mapping.Size=1
Mapping.NbIterations=128
Mapping(fire4_e3x3).OffsetX=128

[fire5_s1x1] conv_def
Input=pool4
KernelWidth=1
KernelHeight=1
NbOutputs=32

[fire5_e1x1] conv_def
Input=fire5_s1x1
KernelWidth=1
KernelHeight=1
NbOutputs=128

[fire5_e3x3] conv_def
Input=fire5_s1x1
KernelWidth=3
KernelHeight=3
Padding=1
NbOutputs=128

[fire6_s1x1] conv_def
Input=fire5_e1x1,fire5_e3x3
KernelWidth=1
KernelHeight=1
NbOutputs=48

[fire6_e1x1] conv_def
Input=fire6_s1x1
KernelWidth=1
KernelHeight=1
NbOutputs=192

[fire6_e3x3] conv_def
Input=fire6_s1x1
KernelWidth=3
KernelHeight=3
Padding=1
NbOutputs=192

[fire7_s1x1] conv_def
Input=fire6_e1x1,fire6_e3x3
KernelWidth=1
KernelHeight=1
NbOutputs=48

[fire7_e1x1] conv_def
Input=fire7_s1x1
KernelWidth=1
KernelHeight=1
NbOutputs=192

[fire7_e3x3] conv_def
Input=fire7_s1x1
KernelWidth=3
KernelHeight=3
Padding=1
NbOutputs=192

[fire8_s1x1] conv_def
Input=fire7_e1x1,fire7_e3x3
KernelWidth=1
KernelHeight=1
NbOutputs=64

[fire8_e1x1] conv_def
Input=fire8_s1x1
KernelWidth=1
KernelHeight=1
NbOutputs=256

[fire8_e3x3] conv_def
Input=fire8_s1x1
KernelWidth=3
KernelHeight=3
Padding=1
NbOutputs=256

[pool8]
Input=fire8_e1x1,fire8_e3x3
Type=Pool
PoolDims=3 3
NbOutputs=512
Stride=2
Pooling=Max
Mapping.Size=1
Mapping.NbIterations=256
Mapping(fire8_e3x3).OffsetX=256

[fire9_s1x1] conv_def
Input=pool8
KernelWidth=1
KernelHeight=1
NbOutputs=64

[fire9_e1x1] conv_def
Input=fire9_s1x1
KernelWidth=1
KernelHeight=1
NbOutputs=256

[fire9_e3x3] conv_def
Input=fire9_s1x1
KernelWidth=3
KernelHeight=3
Padding=1
NbOutputs=256

[drop9_e1x1]
Input=fire9_e1x1
Type=Dropout
NbOutputs=[fire9_e1x1]NbOutputs
Dropout=0.5

[drop9_e3x3]
Input=fire9_e3x3
Type=Dropout
NbOutputs=[fire9_e3x3]NbOutputs
Dropout=0.5

[conv10]
Input=drop9_e1x1,drop9_e3x3
Type=Conv
KernelWidth=1
KernelHeight=1
NbOutputs=1000
ActivationFunction=Rectifier
WeightsFiller=NormalFiller
WeightsFiller.Mean=0.0
WeightsFiller.StdDev=0.01
ConfigSection=common.config

[pool10]
Input=conv10
Type=Pool
PoolDims=13 13
NbOutputs=[conv10]NbOutputs
Stride=1
Pooling=Average
Mapping.Size=1

[softmax]
Input=pool10
Type=Softmax
NbOutputs=[pool10]NbOutputs
WithLoss=1

[softmax.Target]
TopN=5

[common.config]
NoBias=1
Solvers.LearningRate=${LR}
Solvers.Decay=${WD}
Solvers.Momentum=${MOMENTUM}
Solvers.LearningRatePolicy=PolyDecay
Solvers.Power=1.0
Solvers.IterationSize=${ITER_SIZE}
Solvers.MaxIterations=$([sp]_EpochSize * ${EPOCHS} / (${BATCH_SIZE} * ${ITER_SIZE}))
