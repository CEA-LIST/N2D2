;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;    (C) Copyright 2017 CEA LIST. All Rights Reserved.
;    Contributor(s): Olivier BICHLER (olivier.bichler@cea.fr)
;
;    This software is governed by the CeCILL-C license under French law and
;    abiding by the rules of distribution of free software.  You can  use,
;    modify and/ or redistribute the software under the terms of the CeCILL-C
;    license as circulated by CEA, CNRS and INRIA at the following URL
;    "http://www.cecill.info".
;
;    As a counterpart to the access to the source code and  rights to copy,
;    modify and redistribute granted by the license, users are provided only
;    with a limited warranty  and the software's author,  the holder of the
;    economic rights,  and the successive licensors  have only  limited
;    liability.
;
;    The fact that you are presently reading this means that you have had
;    knowledge of the CeCILL-C license and that you accept its terms.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Implements MobileNet:
; https://arxiv.org/pdf/1704.04861.pdf

; Note: this implementation is WITHOUT batch normalization
; WeightsFiller.Scaling is used to implement ZeroInit rules #1 and #2 of paper:
; "Residual Learning Without Normalization via Better Initialization"

; Training for 120 epochs (1281167 * 120), log every epoch
; ./n2d2.sh "$N2D2_MODELS/MobileNet_v2.ini" -learn 153740040 -log 1281167

; Resolution: 224 192 160 128
$SIZE=160
; Margin for random cropping during learning
$MARGIN=32
; Width Multiplier: 1.0 0.75 0.5 0.25
$ALPHA=0.5
$EXPANSION=6

; Number of residual branches for ZeroInit
$L=10

; Training parameters
$LR=0.01
$WD=0.0001
$MOMENTUM=0.9
$BATCH_SIZE=256
$EPOCHS=120

DefaultModel=Frame_CUDA

; Database
[database]
Type=ILSVRC2012_Database
RandomPartitioning=0
Learn=1.0

; Environment
[sp]
SizeX=${SIZE}
SizeY=${SIZE}
NbChannels=3
BatchSize=${BATCH_SIZE}

[sp.Transformation-1]
Type=RescaleTransformation
Width=$(${SIZE} + ${MARGIN})
Height=$(${SIZE} + ${MARGIN})
KeepAspectRatio=1
ResizeToFit=0

[sp.Transformation-2]
Type=PadCropTransformation
Width=[sp.Transformation-1]Width
Height=[sp.Transformation-1]Height

[sp.Transformation-3]
Type=ColorSpaceTransformation
ColorSpace=BGR

[sp.Transformation-4]
Type=RangeAffineTransformation
FirstOperator=Minus
FirstValue=103.94 116.78 123.68 ; BGR format, same as in Caffe
SecondOperator=Multiplies
SecondValue=0.017

[sp.Transformation-6]
Type=SliceExtractionTransformation
ApplyTo=NoLearn
Width=[sp]SizeX
Height=[sp]SizeY
OffsetX=$(${MARGIN} // 2)
OffsetY=$(${MARGIN} // 2)

[sp.OnTheFlyTransformation-5]
Type=SliceExtractionTransformation
ApplyTo=LearnOnly
Width=[sp]SizeX
Height=[sp]SizeY
RandomOffsetX=1
RandomOffsetY=1

[sp.OnTheFlyTransformation-6]
Type=FlipTransformation
ApplyTo=LearnOnly
RandomHorizontalFlip=1

[conv_def]
Type=Conv
ActivationFunction=Rectifier
ActivationFunction.Clipping=6.0
WeightsFiller=HeFiller
ConfigSection=common.config

[conv1] conv_def
Input=sp
KernelSize=3
NbOutputs=$(int(32 * ${ALPHA}))
Stride=2
Padding=1

[conv2.1@${N2D2_MODELS}/MobileNet_v2-bottleneck.ini.tpl]
INPUT=conv1
NB_FILTERS=$(int(16 * ${ALPHA}))
STRIDES=1
EXPANSION=1

[conv3.1@${N2D2_MODELS}/MobileNet_v2-bottleneck.ini.tpl]
INPUT=conv2.1_1x1_linear
NB_FILTERS=$(int(24 * ${ALPHA}))
STRIDES=2
EXPANSION=${EXPANSION}

[conv3.2@${N2D2_MODELS}/MobileNet_v2-bottleneck.ini.tpl]
INPUT=conv3.1_1x1_linear
NB_FILTERS=$(int(24 * ${ALPHA}))
RESIDUAL=1
STRIDES=1
EXPANSION=${EXPANSION}

[conv4.1@${N2D2_MODELS}/MobileNet_v2-bottleneck.ini.tpl]
INPUT=conv3.2_sum
NB_FILTERS=$(int(32 * ${ALPHA}))
STRIDES=2
EXPANSION=${EXPANSION}

[conv4.2@${N2D2_MODELS}/MobileNet_v2-bottleneck.ini.tpl]
INPUT=conv4.1_1x1_linear
NB_FILTERS=$(int(32 * ${ALPHA}))
RESIDUAL=1
STRIDES=1
EXPANSION=${EXPANSION}

[conv4.3@${N2D2_MODELS}/MobileNet_v2-bottleneck.ini.tpl]
INPUT=conv4.2_sum
NB_FILTERS=$(int(32 * ${ALPHA}))
RESIDUAL=1
STRIDES=1
EXPANSION=${EXPANSION}

[conv5.1@${N2D2_MODELS}/MobileNet_v2-bottleneck.ini.tpl]
INPUT=conv4.3_sum
NB_FILTERS=$(int(64 * ${ALPHA}))
STRIDES=2
EXPANSION=${EXPANSION}

[conv5.2@${N2D2_MODELS}/MobileNet_v2-bottleneck.ini.tpl]
INPUT=conv5.1_1x1_linear
NB_FILTERS=$(int(64 * ${ALPHA}))
RESIDUAL=1
STRIDES=1
EXPANSION=${EXPANSION}

[conv5.3@${N2D2_MODELS}/MobileNet_v2-bottleneck.ini.tpl]
INPUT=conv5.2_sum
NB_FILTERS=$(int(64 * ${ALPHA}))
RESIDUAL=1
STRIDES=1
EXPANSION=${EXPANSION}

[conv5.4@${N2D2_MODELS}/MobileNet_v2-bottleneck.ini.tpl]
INPUT=conv5.3_sum
NB_FILTERS=$(int(64 * ${ALPHA}))
RESIDUAL=1
STRIDES=1
EXPANSION=${EXPANSION}

[conv6.1@${N2D2_MODELS}/MobileNet_v2-bottleneck.ini.tpl]
INPUT=conv5.4_sum
NB_FILTERS=$(int(96 * ${ALPHA}))
STRIDES=1
EXPANSION=${EXPANSION}

[conv6.2@${N2D2_MODELS}/MobileNet_v2-bottleneck.ini.tpl]
INPUT=conv6.1_1x1_linear
NB_FILTERS=$(int(96 * ${ALPHA}))
RESIDUAL=1
STRIDES=1
EXPANSION=${EXPANSION}

[conv6.3@${N2D2_MODELS}/MobileNet_v2-bottleneck.ini.tpl]
INPUT=conv6.2_sum
NB_FILTERS=$(int(96 * ${ALPHA}))
RESIDUAL=1
STRIDES=1
EXPANSION=${EXPANSION}

[conv7.1@${N2D2_MODELS}/MobileNet_v2-bottleneck.ini.tpl]
INPUT=conv6.3_sum
NB_FILTERS=$(int(160 * ${ALPHA}))
STRIDES=2
EXPANSION=${EXPANSION}

[conv7.2@${N2D2_MODELS}/MobileNet_v2-bottleneck.ini.tpl]
INPUT=conv7.1_1x1_linear
NB_FILTERS=$(int(160 * ${ALPHA}))
RESIDUAL=1
STRIDES=1
EXPANSION=${EXPANSION}

[conv7.3@${N2D2_MODELS}/MobileNet_v2-bottleneck.ini.tpl]
INPUT=conv7.2_sum
NB_FILTERS=$(int(160 * ${ALPHA}))
RESIDUAL=1
STRIDES=1
EXPANSION=${EXPANSION}

[conv8.1@${N2D2_MODELS}/MobileNet_v2-bottleneck.ini.tpl]
INPUT=conv7.3_sum
NB_FILTERS=$(int(320 * ${ALPHA}))
STRIDES=1
EXPANSION=${EXPANSION}

[conv9] conv_def
Input=conv8.1_1x1_linear
KernelSize=1
NbOutputs=$(int(max(1280, 1280 * ${ALPHA})))

[pool]
Input=conv9
Type=Pool
Pooling=Average
PoolDims=[conv9]_OutputsWidth [conv9]_OutputsHeight
NbOutputs=[conv9]NbOutputs
Mapping.ChannelsPerGroup=1

[fc]
Input=pool
Type=Fc
WeightsFiller=XavierFiller
WeightsFiller.Scaling=$(0.0 if ${L} > 0 else 1.0)
BiasFiller=ConstantFiller
BiasFiller.Value=0.0
NbOutputs=1000
ActivationFunction=Linear
ConfigSection=common.config,fc.config
[fc.config]
NoBias=0

[softmax]
Input=fc
Type=Softmax
NbOutputs=[fc]NbOutputs
WithLoss=1

[softmax.Target]
TopN=5

[common.config]
NoBias=1
WeightsSolver.LearningRate=${LR}
WeightsSolver.Decay=${WD}
BiasSolver.LearningRate=$(2.0 * ${LR})
BiasSolver.Decay=0.0
Solvers.Momentum=${MOMENTUM}
Solvers.LearningRatePolicy=PolyDecay
Solvers.Power=1.0
Solvers.MaxIterations=$([sp]_EpochSize * ${EPOCHS} / ${BATCH_SIZE})
