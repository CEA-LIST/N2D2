;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;    (C) Copyright 2017 CEA LIST. All Rights Reserved.
;    Contributor(s): Olivier BICHLER (olivier.bichler@cea.fr)
;
;    This software is governed by the CeCILL-C license under French law and
;    abiding by the rules of distribution of free software.  You can  use,
;    modify and/ or redistribute the software under the terms of the CeCILL-C
;    license as circulated by CEA, CNRS and INRIA at the following URL
;    "http://www.cecill.info".
;
;    As a counterpart to the access to the source code and  rights to copy,
;    modify and redistribute granted by the license, users are provided only
;    with a limited warranty  and the software's author,  the holder of the
;    economic rights,  and the successive licensors  have only  limited
;    liability.
;
;    The fact that you are presently reading this means that you have had
;    knowledge of the CeCILL-C license and that you accept its terms.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Implements ResNet-18:
; https://arxiv.org/abs/1512.03385

; Note: this implementation is WITH batch normalization

; Training for 90 epochs (1281167 * 90), log every epoch
; ./n2d2.sh "$N2D2_MODELS/ResNet-18.ini" -learn 115305030 -log 1281167

$NB_CLASSES=1000
; Resolution: 224 192 160 128
$SIZE=224
; Margin for random cropping during learning
$MARGIN=32
; Width Multiplier: 1.0 0.75 0.5 0.25
$ALPHA=1.0

; Number of residual branches for ZeroInit
$L=8

; Training parameters
$LR=0.01
$WD=0.0001
$MOMENTUM=0.9
$BATCH_SIZE=128
$EPOCHS=90

DefaultModel=Frame_CUDA

; Database
[database]
Type=ILSVRC2012_Database
RandomPartitioning=0
Learn=1.0

[sp.Transformation-1]
Type=RescaleTransformation
Width=$(${SIZE} + ${MARGIN})
Height=$(${SIZE} + ${MARGIN})
KeepAspectRatio=1
ResizeToFit=0

[sp.Transformation-2]
Type=PadCropTransformation
Width=[sp.Transformation-1]Width
Height=[sp.Transformation-1]Height

[sp.Transformation-3]
Type=ColorSpaceTransformation
ColorSpace=BGR

[sp.Transformation-4]
Type=RangeAffineTransformation
FirstOperator=Minus
FirstValue=103.94 116.78 123.68 ; BGR format, same as in Caffe
SecondOperator=Multiplies
SecondValue=0.017

[sp.Transformation-6]
Type=SliceExtractionTransformation
ApplyTo=NoLearn
Width=[sp]SizeX
Height=[sp]SizeY
OffsetX=$(${MARGIN} / 2)
OffsetY=$(${MARGIN} / 2)

[sp.OnTheFlyTransformation-5]
Type=SliceExtractionTransformation
ApplyTo=LearnOnly
Width=[sp]SizeX
Height=[sp]SizeY
RandomOffsetX=1
RandomOffsetY=1

[sp.OnTheFlyTransformation-6]
Type=FlipTransformation
ApplyTo=LearnOnly
RandomHorizontalFlip=1

[conv_def]
Type=Conv
ActivationFunction=Linear
WeightsFiller=HeFiller
ConfigSection=common.config

[bn_def]
Type=BatchNorm
ActivationFunction=Rectifier
Solvers.Momentum=${MOMENTUM}
Solvers.LearningRatePolicy=PolyDecay
Solvers.Power=1.0
Solvers.MaxIterations=$([sp]_EpochSize * ${EPOCHS} / ${BATCH_SIZE})
Solvers.MaxIterations=17578

; conv1
[conv1] conv_def
Input=sp
KernelDims=7 7
NbOutputs=$(int(64 * ${ALPHA}))
Stride=2
Padding=3

[bn1] bn_def
Input=conv1
NbOutputs=[conv1]NbOutputs

[pool1]
Input=bn1
Type=Pool
PoolDims=3 3
NbOutputs=[conv1]NbOutputs
Stride=2
Pooling=Max
Mapping.Size=1

; conv2.x (x2)
[conv2.1@ResNet_BN-block.ini.tpl]
INPUT=pool1
NB_FILTERS=$(int(64 * ${ALPHA}))
STRIDES=1
PROJECTION_SHORTCUT=1

[conv2.2@ResNet_BN-block.ini.tpl]
INPUT=conv2.1_sum
NB_FILTERS=$(int(64 * ${ALPHA}))
STRIDES=1

; conv3.x (x2)
[conv3.1@ResNet_BN-block.ini.tpl]
INPUT=conv2.2_sum
NB_FILTERS=$(int(128 * ${ALPHA}))
STRIDES=2
PROJECTION_SHORTCUT=1

[conv3.2@ResNet_BN-block.ini.tpl]
INPUT=conv3.1_sum
NB_FILTERS=$(int(128 * ${ALPHA}))
STRIDES=1

; conv4.x (x2)
[conv4.1@ResNet_BN-block.ini.tpl]
INPUT=conv3.2_sum
NB_FILTERS=$(int(256 * ${ALPHA}))
STRIDES=2
PROJECTION_SHORTCUT=1

[conv4.2@ResNet_BN-block.ini.tpl]
INPUT=conv4.1_sum
NB_FILTERS=$(int(256 * ${ALPHA}))
STRIDES=1

; conv5.x (x2)
[conv5.1@ResNet_BN-block.ini.tpl]
INPUT=conv4.2_sum
NB_FILTERS=$(int(512 * ${ALPHA}))
STRIDES=2
PROJECTION_SHORTCUT=1

[conv5.2@ResNet_BN-block.ini.tpl]
INPUT=conv5.1_sum
NB_FILTERS=$(int(512 * ${ALPHA}))
STRIDES=1

[pool]
Input=conv5.2_sum
Type=Pool
PoolDims=[conv5.2_sum]_OutputsWidth [conv5.2_sum]_OutputsHeight
NbOutputs=[conv5.2_sum]NbOutputs
Stride=1
Pooling=Average
Mapping.ChannelsPerGroup=1

[fc]
Input=pool
Type=Fc
NbOutputs=${NB_CLASSES}
ActivationFunction=Linear
WeightsFiller=XavierFiller
WeightsFiller.Scaling=$(0.0 if ${L} > 0 else 1.0)
BiasFiller=ConstantFiller
BiasFiller.Value=0.0
ConfigSection=common.config,fc.config

[softmax]
Input=fc
Type=Softmax
NbOutputs=[fc]NbOutputs
WithLoss=1

[softmax.Target]
TopN=5

[common.config]
NoBias=1
WeightsSolver.LearningRate=${LR}
WeightsSolver.Decay=${WD}
BiasSolver.LearningRate=$(2.0 * ${LR})
BiasSolver.Decay=0.0
Solvers.Momentum=${MOMENTUM}
Solvers.LearningRatePolicy=PolyDecay
Solvers.Power=1.0
Solvers.MaxIterations=$([sp]_EpochSize * ${EPOCHS} / ${BATCH_SIZE})
Solvers.MaxIterations=17578

[fc.config]
NoBias=0
