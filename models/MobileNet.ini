;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;    (C) Copyright 2017 CEA LIST. All Rights Reserved.
;    Contributor(s): Olivier BICHLER (olivier.bichler@cea.fr)
;
;    This software is governed by the CeCILL-C license under French law and
;    abiding by the rules of distribution of free software.  You can  use,
;    modify and/ or redistribute the software under the terms of the CeCILL-C
;    license as circulated by CEA, CNRS and INRIA at the following URL
;    "http://www.cecill.info".
;
;    As a counterpart to the access to the source code and  rights to copy,
;    modify and redistribute granted by the license, users are provided only
;    with a limited warranty  and the software's author,  the holder of the
;    economic rights,  and the successive licensors  have only  limited
;    liability.
;
;    The fact that you are presently reading this means that you have had
;    knowledge of the CeCILL-C license and that you accept its terms.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Implements MobileNet:
; https://arxiv.org/pdf/1704.04861.pdf

; Training for 120 epochs (1281167 * 120), log every epoch
; ./n2d2.sh "$N2D2_MODELS/MobileNet.ini" -learn 153740040 -log 1281167

; Resolution: 224 192 160 128
$SIZE=160
; Margin for random cropping during learning
$MARGIN=32
; Width Multiplier: 1.0 0.75 0.5 0.25
$ALPHA=0.5

; Training parameters
$LR=0.1
$WD=0.0001
$MOMENTUM=0.9
$BATCH_SIZE=256
$EPOCHS=100

DefaultModel=Frame_CUDA

; Database
[database]
Type=ILSVRC2012_Database
RandomPartitioning=0
Learn=1.0

; Environment
[sp]
SizeX=${SIZE}
SizeY=${SIZE}
NbChannels=3
BatchSize=${BATCH_SIZE}

[sp.Transformation-1]
Type=RescaleTransformation
Width=$(${SIZE} + ${MARGIN})
Height=$(${SIZE} + ${MARGIN})
KeepAspectRatio=1
ResizeToFit=0

[sp.Transformation-2]
Type=PadCropTransformation
Width=[sp.Transformation-1]Width
Height=[sp.Transformation-1]Height

[sp.Transformation-3]
Type=ColorSpaceTransformation
ColorSpace=BGR

[sp.Transformation-4]
Type=RangeAffineTransformation
FirstOperator=Minus
FirstValue=103.94 116.78 123.68 ; BGR format, same as in Caffe
SecondOperator=Multiplies
SecondValue=0.017

[sp.Transformation-6]
Type=SliceExtractionTransformation
ApplyTo=NoLearn
Width=[sp]SizeX
Height=[sp]SizeY
OffsetX=$(${MARGIN} / 2)
OffsetY=$(${MARGIN} / 2)

[sp.OnTheFlyTransformation-5]
Type=SliceExtractionTransformation
ApplyTo=LearnOnly
Width=[sp]SizeX
Height=[sp]SizeY
RandomOffsetX=1
RandomOffsetY=1

[sp.OnTheFlyTransformation-6]
Type=FlipTransformation
ApplyTo=LearnOnly
RandomHorizontalFlip=1

[conv_def]
Type=Conv
ActivationFunction=Rectifier
WeightsFiller=HeFiller
ConfigSection=common.config

[conv1] conv_def
Input=sp
KernelDims=3 3
NbOutputs=$((32 * ${ALPHA})/1)
Stride=2
Padding=1

[conv1_3x3_dw] conv_def
Input=conv1
KernelDims=3 3
NbOutputs=$((32 * ${ALPHA})/1)
Stride=1
Padding=1
Mapping.ChannelsPerGroup=1

[conv1_1x1] conv_def
Input=conv1_3x3_dw
KernelDims=1 1
NbOutputs=$((64 * ${ALPHA})/1)
Stride=1

[conv2_3x3_dw] conv_def
Input=conv1_1x1
KernelDims=3 3
NbOutputs=$((64 * ${ALPHA})/1)
Stride=2
Padding=1
Mapping.ChannelsPerGroup=1

[conv2_1x1] conv_def
Input=conv2_3x3_dw
KernelDims=1 1
NbOutputs=$((128 * ${ALPHA})/1)
Stride=1

[conv3_3x3_dw] conv_def
Input=conv2_1x1
KernelDims=3 3
NbOutputs=$((128 * ${ALPHA})/1)
Stride=1
Padding=1
Mapping.ChannelsPerGroup=1

[conv3_1x1] conv_def
Input=conv3_3x3_dw
KernelDims=1 1
NbOutputs=$((128 * ${ALPHA})/1)
Stride=1

[conv4_3x3_dw] conv_def
Input=conv3_1x1
KernelDims=3 3
NbOutputs=$((128 * ${ALPHA})/1)
Stride=2
Padding=1
Mapping.ChannelsPerGroup=1

[conv4_1x1] conv_def
Input=conv4_3x3_dw
KernelDims=1 1
NbOutputs=$((256 * ${ALPHA})/1)
Stride=1

[conv5_3x3_dw] conv_def
Input=conv4_1x1
KernelDims=3 3
NbOutputs=$((256 * ${ALPHA})/1)
Stride=1
Padding=1
Mapping.ChannelsPerGroup=1

[conv5_1x1] conv_def
Input=conv5_3x3_dw
KernelDims=1 1
NbOutputs=$((256 * ${ALPHA})/1)
Stride=1

[conv6_3x3_dw] conv_def
Input=conv5_1x1
KernelDims=3 3
NbOutputs=$((256 * ${ALPHA})/1)
Stride=2
Padding=1
Mapping.ChannelsPerGroup=1

[conv6_1x1] conv_def
Input=conv6_3x3_dw
KernelDims=1 1
NbOutputs=$((512 * ${ALPHA})/1)
Stride=1

[conv7_1_3x3_dw] conv_def
Input=conv6_1x1
KernelDims=3 3
NbOutputs=$((512 * ${ALPHA})/1)
Stride=1
Padding=1
Mapping.ChannelsPerGroup=1

[conv7_1_1x1] conv_def
Input=conv7_1_3x3_dw
KernelDims=1 1
NbOutputs=$((512 * ${ALPHA})/1)
Stride=1

[conv7_2_3x3_dw] conv_def
Input=conv7_1_1x1
KernelDims=3 3
NbOutputs=$((512 * ${ALPHA})/1)
Stride=1
Padding=1
Mapping.ChannelsPerGroup=1

[conv7_2_1x1] conv_def
Input=conv7_2_3x3_dw
KernelDims=1 1
NbOutputs=$((512 * ${ALPHA})/1)
Stride=1

[conv7_3_3x3_dw] conv_def
Input=conv7_2_1x1
KernelDims=3 3
NbOutputs=$((512 * ${ALPHA})/1)
Stride=1
Padding=1
Mapping.ChannelsPerGroup=1

[conv7_3_1x1] conv_def
Input=conv7_3_3x3_dw
KernelDims=1 1
NbOutputs=$((512 * ${ALPHA})/1)
Stride=1

[conv7_4_3x3_dw] conv_def
Input=conv7_3_1x1
KernelDims=3 3
NbOutputs=$((512 * ${ALPHA})/1)
Stride=1
Padding=1
Mapping.ChannelsPerGroup=1

[conv7_4_1x1] conv_def
Input=conv7_4_3x3_dw
KernelDims=1 1
NbOutputs=$((512 * ${ALPHA})/1)
Stride=1

[conv7_5_3x3_dw] conv_def
Input=conv7_4_1x1
KernelDims=3 3
NbOutputs=$((512 * ${ALPHA})/1)
Stride=1
Padding=1
Mapping.ChannelsPerGroup=1

[conv7_5_1x1] conv_def
Input=conv7_5_3x3_dw
KernelDims=1 1
NbOutputs=$((512 * ${ALPHA})/1)
Stride=1

[conv8_3x3_dw] conv_def
Input=conv7_5_1x1
KernelDims=3 3
NbOutputs=$((512 * ${ALPHA})/1)
Stride=2
Padding=1
Mapping.ChannelsPerGroup=1

[conv8_1x1] conv_def
Input=conv8_3x3_dw
KernelDims=1 1
NbOutputs=$((1024 * ${ALPHA})/1)
Stride=1

[conv9_3x3_dw] conv_def
Input=conv8_1x1
KernelDims=3 3
NbOutputs=$((1024 * ${ALPHA})/1)
Stride=1
Padding=1
Mapping.ChannelsPerGroup=1

[conv9_1x1] conv_def
Input=conv9_3x3_dw
KernelDims=1 1
NbOutputs=$((1024 * ${ALPHA})/1)
Stride=1

[pool]
Input=conv9_1x1
Type=Pool
PoolDims=[conv9_1x1]_OutputsWidth [conv9_1x1]_OutputsHeight
NbOutputs=[conv9_1x1]NbOutputs
Stride=1
Pooling=Average
Mapping.ChannelsPerGroup=1

[fc]
Input=pool
Type=Fc
NbOutputs=1000
ActivationFunction=Linear
WeightsFiller=XavierFiller
BiasFiller=ConstantFiller
BiasFiller.Value=0.0
ConfigSection=common.config,fc.config

[softmax]
Input=fc
Type=Softmax
NbOutputs=[fc]NbOutputs
WithLoss=1

[softmax.Target]
TopN=5

[common.config]
NoBias=1
WeightsSolver.LearningRate=${LR}
WeightsSolver.Decay=${WD}
BiasSolver.LearningRate=$(2.0 * ${LR})
BiasSolver.Decay=0.0
Solvers.Momentum=${MOMENTUM}
Solvers.LearningRatePolicy=PolyDecay
Solvers.Power=1.0
Solvers.MaxIterations=$([sp]_EpochSize * ${EPOCHS} / ${BATCH_SIZE})

[fc.config]
NoBias=0
