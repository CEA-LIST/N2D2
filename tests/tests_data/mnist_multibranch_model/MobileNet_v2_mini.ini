;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;    (C) Copyright 2017 CEA LIST. All Rights Reserved.
;    Contributor(s): Olivier BICHLER (olivier.bichler@cea.fr)
;
;    This software is governed by the CeCILL-C license under French law and
;    abiding by the rules of distribution of free software.  You can  use,
;    modify and/ or redistribute the software under the terms of the CeCILL-C
;    license as circulated by CEA, CNRS and INRIA at the following URL
;    "http://www.cecill.info".
;
;    As a counterpart to the access to the source code and  rights to copy,
;    modify and redistribute granted by the license, users are provided only
;    with a limited warranty  and the software's author,  the holder of the
;    economic rights,  and the successive licensors  have only  limited
;    liability.
;
;    The fact that you are presently reading this means that you have had
;    knowledge of the CeCILL-C license and that you accept its terms.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Implements MobileNet-v2:
; https://arxiv.org/pdf/1801.04381.pdf

; Note: this implementation is WITH batch normalization

$BATCH_SIZE=64

$CONV_QUANT_ALPHA=8.0
$FC_QUANT_ALPHA=10.0
$W_RANGE=255
$A_RANGE=255

$LR=0.05
$WD=0.0
$MOMENTUM=0.0
$Policy=None
$SolverType=SGD

$ALPHA=1.0
$EXPANSION=6

DefaultModel=Frame_CUDA

; Database
[database]
Type=MNIST_IDX_Database
RandomPartitioning=1

; Environment
[env]
SizeX=32
SizeY=32
BatchSize=${BATCH_SIZE}

[env.Transformation_0]
Type=RescaleTransformation
Width=32
Height=32

[env.Transformation_1]
Type=RangeAffineTransformation
FirstOperator=Divides
FirstValue=255.0

[conv_def]
Type=Conv
QWeight=SAT
QWeight.Range=${W_RANGE}
QWeight.ApplyScaling=0
QWeight.ApplyQuantization=1
QWeight.QuantMode=Default
WeightsFiller=XavierFiller
WeightsFiller.VarianceNorm=FanOut
WeightsFiller.Scaling=2.0
ActivationFunction=Linear
ConfigSection=common.config

[bn_def]
Type=BatchNorm
ActivationFunction=Linear
QAct=SAT
QAct.Range=${A_RANGE}
QAct.Alpha=${CONV_QUANT_ALPHA}
QActSolver=SGD
QActSolver.LearningRate=${LR}
QActSolver.LearningRatePolicy=${Policy}
QActSolver.Momentum=${MOMENTUM}
QActSolver.Decay=${WD}

[conv0] conv_def
Input=sp
KernelSize=3
NbOutputs=$(int(32 * ${ALPHA}))
Stride=2
Padding=1

[bn0] bn_def
Input=conv0
NbOutputs=[conv0]NbOutputs
ConfigSection=bn.config

[conv1] conv_def
Input=bn0
KernelSize=3
NbOutputs=$(int(32 * ${ALPHA}))
Stride=1
Padding=1

[bn1] bn_def
Input=conv1
NbOutputs=[conv1]NbOutputs
ConfigSection=bn.config

[conv2] conv_def
Input=bn1
KernelSize=1
NbOutputs=$(int(16 * ${ALPHA}))
Stride=1
Padding=0

[bn2] bn_def
Input=conv2
NbOutputs=[conv2]NbOutputs
ActivationFunction=Linear
ConfigSection=bn.config

[conv3.1@MobileNet_v2-bottleneck-quant-mini.ini.tpl]
INPUT=bn2
NB_FILTERS=$(int(16 * ${ALPHA}))
RESIDUAL=1
STRIDES=1
EXPANSION=${EXPANSION}

[conv4] conv_def
Input=conv3.1_bn_sum
KernelSize=1
NbOutputs=$(int(32 * ${ALPHA}))

[bn4] bn_def
Input=conv4
NbOutputs=[conv4]NbOutputs
QAct.Range=255
QAct.Alpha=${FC_QUANT_ALPHA}
ConfigSection=bn.config

[pool]
Input=bn4
Type=Pool
Pooling=Average
PoolDims=[bn4]_OutputsWidth [bn4]_OutputsHeight
NbOutputs=[bn4]NbOutputs
Mapping.ChannelsPerGroup=1

[fc]
Input=pool
Type=Fc
QWeight=SAT
QWeight.Range=255
QWeight.ApplyScaling=1
QWeight.ApplyQuantization=1
QWeight.QuantMode=Default
WeightsFiller=NormalFiller
WeightsFiller.Mean=0.0
WeightsFiller.StdDev=0.01
BiasFiller=ConstantFiller
BiasFiller.Value=0.0
NbOutputs=10
ActivationFunction=Linear
ConfigSection=common.config,fc.config
[fc.config]
NoBias=0

[softmax]
Input=fc
Type=Softmax
NbOutputs=[fc]NbOutputs
WithLoss=1

[softmax.Target]
TopN=1

[common.config]
NoBias=1
Solvers.LearningRate=${LR}
Solvers.LearningRatePolicy=${Policy}
Solvers.Momentum=${MOMENTUM}
Solvers.Decay=${WD}

[bn.config]
Solvers.LearningRate=${LR}
Solvers.LearningRatePolicy=${Policy}
Solvers.Momentum=${MOMENTUM}
Solvers.Decay=${WD}