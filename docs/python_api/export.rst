Export
======

In this section, we will present how to generate an N2D2 export with the Python API.
Exports are standalone code which are generated by N2D2.

If you want more specific information about an export please refer to it in the export section.

With the Python API, you can only export an :py:class:`n2d2.cells.DeepNetCell`. 

Once you have trained your model, you can convert your :py:class:`n2d2.cells.Sequence` into a :py:class:`n2d2.cells.DeepNetCell` 
with the method :py:meth:`n2d2.cells.Sequence.to_deepnet_cell`.

If you have used another way to train your model such as the interoperability with Keras or PyTorch, you can retrieve the :py:class:`n2d2.cells.DeepNetCell` with the appropriate ``get_deepnet_cell`` method.

.. warning::

    When using ``interoperability``, you do not associate a :py:class:`n2d2.provider.DataProvider` to the :py:class:`n2d2.cells.DeepNetCell`. 
    So if you want to calibrate your network, you need ot specify a data provider otherwise N2D2 will fail to generate the export.

Export C
--------

Documentation
~~~~~~~~~~~~~

.. autofunction:: n2d2.export.export_c

Example
~~~~~~~

.. code-block:: python

    n2d2.export.export_c(
        DEEPNET_CELL,
        nb_bits=8,
        export_nb_stimuli_max=-1,
        calibration=-1)

Export CPP
----------

.. autofunction:: n2d2.export.export_cpp

Example
~~~~~~~

.. code-block:: python

    n2d2.export.export_cpp(
        DEEPNET_CELL,
        nb_bits=8,
        export_nb_stimuli_max=-1,
        calibration=-1)